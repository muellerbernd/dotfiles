#--------------------------------------------------------------------------
# Bootstrap tpm
#--------------------------------------------------------------------------

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Default terminal
# {n}vim compability
set -g default-terminal "tmux-256color"
# set -ga terminal-overrides ",screen-256color*:Tc"
# set-option -g default-terminal "screen-256color"

# set-option -g default-shell /bin/zsh

# Turn the mouse on
set-option -g mouse on

# enable clipboard
set-option -s set-clipboard on

# Have a very large history
set -g history-limit 1000000

set-option -sa terminal-overrides ',*:Tc'          # Enable truecolor
set-option -sa terminal-overrides ',*:sitm=\E[3m'  # Enable italics
set-option -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm' # Enable undercurl
set-option -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # Enable undercurl color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# if multiple clients are attached to the same window, maximize it to the
# bigger one
set-window-option -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# focus events enabled for terminals that support them
set -g focus-events on

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Monitor window activity to display in the status bar
# setw -g monitor-activity on

# Set title
set -g set-titles on
set-option -g set-titles-string "üê∞${USER}@#H: #S / #{pane_current_command}"
# set -g set-titles-string "TMUX:#T"

# window rename
set-option -g status-interval 1
set-option -g allow-rename off
set-option -g automatic-rename off
# set-option -g automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"

# set-option -g automatic-rename-format '#{b:pane_current_path}'
# set-option -g set-titles-string "${USER}@#H: #S / #W"
# set-option -g set-titles-string "üê±${USER}@#H: #S / #W"
# set-option -g set-titles-string "${USER}@#H: #S / #T"

#--------------------------------------------------------------------------
# tmux statusbar config
#--------------------------------------------------------------------------
set -g status "on"
set -g status-bg "colour236"
set -g status-justify "left"
set -g status-position "bottom"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left "#{prefix_highlight}#[fg=colour252,bg=colour238,bold] #S #[bg=colour255]"
set -g status-right "#[fg=colour252,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour252,bg=colour238] #h "

setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour245,bg=colour236] #I #[fg=colour245,bg=colour236]#W "
setw -g window-status-current-format "#[fg=colour236,bg=colour241,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour241] #I #[fg=colour231,bg=colour241]#{?window_zoomed_flag,#[fg=green][],}#W #[fg=colour240,bg=colour236,nobold,nounderscore,noitalics]"

#--------------------------------------------------------------------------
# custom keymappings
#--------------------------------------------------------------------------
# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1\; select-window -p
bind-key -n C-S-Right swap-window -t +1\; select-window -n
# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical
# open in current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Resize the current pane using Alt + direction
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5
bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5

# Switch between previous and next windows with repeatable
# bind -r n next-window
# bind -r p previous-window
bind n next-window
bind p previous-window

# Toggle mouse with ^M; then report it's new status
bind-key C-m set-option -g mouse \; display-message 'Mouse #{?mouse,on,off}'

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# copy stuff
# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# set-window-option -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
# kill current session and go to next
bind-key X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"

#--------------------------------------------------------------------------
# plugins
#--------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'ofirgall/tmux-window-name'

# for vim resurrect autoload vim and restore last saved environment
# for vim
# set -g @resurrect-strategy-vim 'session'
# for neovim
# set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-default-processes 'false'
set -g @resurrect-process-match-strategy "basename"
set -g @resurrect-save-command-strategy "linux_procfs"

set -g @resurrect-dir '~/.tmux/resurrect'
bind-key C-c run-shell "rm -r ~/.tmux/resurrect/*; tmux display 'Resurrect dir cleaned!'"

# continuum-restore every 30 minutes
set -g @continuum-save-interval '30'
set -g @continuum-restore 'on'

# tmux yank
# set -g @yank_selection 'clipboard'
# set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'

# set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git']"
# set -g @tmux_window_max_name_len "20"
# set -g @tmux_window_name_use_tilde "False"


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
