#!/usr/bin/env sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super Return spawn "footclient"

# App launcher
# riverctl map normal Super D spawn fuzzel
riverctl map normal Super D spawn rofi-script

# reload river config
riverctl map normal Super+Shift R spawn ~/.config/river/init

# Super+Q to close the focused view
riverctl map normal Super+Shift Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift E spawn "$HOME/.config/rofi/scripts/powermenu/run.sh"

# Super+Right and Super+Left to focus the next/previous view in the layout stack
riverctl map normal Super Right focus-view right
riverctl map normal Super Left focus-view left
riverctl map normal Super Up focus-view up
riverctl map normal Super Down focus-view down

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
# riverctl map normal Super+Shift Right swap right
riverctl map normal Super+Shift Right swap right
riverctl map normal Super+Shift Left swap left
riverctl map normal Super+Shift Up swap up
riverctl map normal Super+Shift Down swap down

# close all mako notifications
riverctl map normal Super Q spawn "makoctl dismiss --all"
# hide waybar
riverctl map normal Super W spawn "pkill -SIGUSR1 waybar"

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output right
riverctl map normal Super Comma focus-output left

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output right
riverctl map normal Super+Shift Comma send-to-output left

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Z zoom

riverctl declare-mode float
riverctl declare-mode resize
riverctl map normal Super F enter-mode float # Super+F to enter float mode
riverctl map normal Super R enter-mode resize # Super+R to enter resize mode

### Floating window mappings but note that these also apply to tiled windows.
#
# Super {Arrows} to move views
riverctl map float Super Left move left 100
riverctl map float Super Down move down 100
riverctl map float Super Up move up 100
riverctl map float Super Right move right 100

# Alt+{arrows} to snap views to screen edges
riverctl map float Alt Left snap left
riverctl map float Alt Down snap down
riverctl map float Alt Up snap up
riverctl map float Alt Right snap right

# Shift+{arrows} to resize views
riverctl map float Shift Left resize horizontal -100
riverctl map float Shift Down resize vertical 100
riverctl map float Shift Up resize vertical -100
riverctl map float Shift Right resize horizontal 100

riverctl map resize Left send-layout-cmd rivertile '-main-ratio -0.05'
riverctl map resize Right send-layout-cmd rivertile '-main-ratio +0.05'
riverctl map resize Up send-layout-cmd rivertile '-main-count +1'
riverctl map resize Down period send-layout-cmd rivertile '-main-count -1'

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map resize Super Right send-layout-cmd rivertile "main-ratio -0.05"
riverctl map resize Super Left send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map resize Super Down send-layout-cmd rivertile "main-count +1"
riverctl map resize Super Up send-layout-cmd rivertile "main-count -1"

riverctl map float None Escape enter-mode normal # Escape to exit float mode and return to normal mode
riverctl map resize None Escape enter-mode normal # Escape to exit float mode and return to normal mode

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9); do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# scratchpad https://wiki.archlinux.org/title/River
scratch_tag=$((1 << 20))

riverctl map normal Super Minus toggle-focused-tags ${scratch_tag} # toggle the scratchpad
riverctl map normal Super+Shift Minus set-view-tags ${scratch_tag} # send windows to the scratchpad

# Set spawn tagmask to ensure new windows do not have the scratchpad tag unless explicitly set.
all_but_scratch_tag=$((((1 << 32) - 1) ^ $scratch_tag))
riverctl spawn-tagmask ${all_but_scratch_tag}

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super+Alt Up send-layout-cmd rivertile "main-location top"
riverctl map normal Super+Alt Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super+Alt Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super+Alt Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume spawn "$HOME/scripts/controlVolumePipewire.py up"
    riverctl map $mode None XF86AudioLowerVolume spawn "$HOME/scripts/controlVolumePipewire.py down"
    riverctl map $mode None XF86AudioMute spawn "$HOME/scripts/controlVolumePipewire.py mute"

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn "playerctl play-pause"
    riverctl map $mode None XF86AudioPlay spawn "playerctl play-pause"
    riverctl map $mode None XF86AudioPrev spawn "playerctl previous"
    riverctl map $mode None XF86AudioNext spawn "playerctl next"
    riverctl map $mode None XF86AudioMicMute spawn "wpctl set-mute @DEFAULT_SOURCE@ toggle"

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp spawn 'light -A 1 && sh ~/scripts/notifyBrightness.sh'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 1 && sh ~/scripts/notifyBrightness.sh'

    # disable laptop keyboard
    riverctl map $mode None XF86PowerOff spawn "$HOME/scripts/toggleLaptopKeyboard.sh"
    # not working
    # riverctl map $mode -release None Caps_Lock spawn "$HOME/scripts/notifyCaps.sh"
done

# nightmode
riverctl map normal Super+Shift N spawn "$HOME/scripts/nightmode.sh"

riverctl map normal Super V spawn "cliphist list | rofi -dmenu | cliphist decode | wl-copy"
# riverctl map normal Super Escape spawn "loginctl lock-session"
riverctl map normal Super Escape spawn "$HOME/scripts/lock_sway.sh"

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0xcdd6f4
riverctl border-color-unfocused 0x586e75
riverctl border-width 2

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
# riverctl rule-add -app-id 'float*' -title 'foo' float
riverctl rule-add -app-id firefox ssd
riverctl rule-add -app-id .blueman-manager-wrapped ssd
riverctl rule-add -app-id org.pwmt.zathura ssd
riverctl rule-add -app-id org.gajim.Gajim ssd

riverctl rule-add -app-id float float

# Make all views with app-id "bar" and any title use client-side decorations
# riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 1 -outer-padding 0 -main-location right -main-ratio 0.5 &

riverctl keyboard-layout de
# Set touchpad by grabbing the event
for pad in $(riverctl list-inputs | grep -i touchpad); do
    riverctl input $pad events enabled
    riverctl input $pad tap enabled
    riverctl input $pad natural-scroll enabled
done

# riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad tap enabled
# riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad natural-scroll enabled
riverctl focus-follows-cursor always

# Set app-ids and titles of views which should use client side decorations
# riverctl csd-filter-add app-id "firefox"

# --------------------------------------------------------
# AUTOSTART
# --------------------------------------------------------
riverctl spawn "$HOME/.config/river/autostart"

# The user dinit instance is shared across all login sessions and all ttys
# Therefore, only tell it about the first wayland session
# if [ "$WAYLAND_DISPLAY" = "wayland-1" ]; then
#     dinitctl setenv WAYLAND_DISPLAY
#     dinitctl setenv DISPLAY
#     dinitctl restart dbus --force
# fi

# vim: filetype=sh
