#
#  _ _____                    __ _
# (_)___ /    ___ ___  _ __  / _(_) __ _
# | | |_ \   / __/ _ \| '_ \| |_| |/ _` |
# | |___) | | (_| (_) | | | |  _| | (_| |
# |_|____/   \___\___/|_| |_|_| |_|\__, |
#                                  |___/

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
# keycodes for i3
# https://github.com/i3/i3/blob/9db03797da3cea5dc6898adc79a68ba4523a409c/i3-input/keysym.map
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:Fira Mono 14
font pango:Hack Nerd Font 10
# font pango:Iosevka 14

# Use Mouse+$mod todrag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# keep cursor in the middle of current focused window
# set $movemouse "sh -c 'eval `xdotool getactivewindow getwindowgeometry --shell`; xdotool mousemove $((X+WIDTH/2)) $((Y+HEIGHT/2))'"
# keep cursor in the top right corner of current focused window
set $movemouse "sh -c 'eval `xdotool getactivewindow getwindowgeometry --shell`; xdotool mousemove $((X+WIDTH-80)) $((Y+120))'"
# move focus
bindsym $mod+Left focus left;exec $movemouse
bindsym $mod+Down focus down;exec $movemouse
bindsym $mod+Up focus up;exec $movemouse
bindsym $mod+Right focus right;exec $movemouse

# move container
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+t layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# prompt for new workspace name
bindsym $mod+g exec i3-msg \"rename workspace to \\\"$(rofi -dmenu -p rename)\\\"\"

# close current dunst notification
bindsym $mod+period exec --no-startup-id dunstctl close

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
# bindsym $mod+Shift+1 move container to workspace number $ws1  ; workspace 1
# bindsym $mod+Shift+2 move container to workspace number $ws2  ; workspace 2
# bindsym $mod+Shift+3 move container to workspace number $ws3  ; workspace 3
# bindsym $mod+Shift+4 move container to workspace number $ws4  ; workspace 4
# bindsym $mod+Shift+5 move container to workspace number $ws5  ; workspace 5
# bindsym $mod+Shift+6 move container to workspace number $ws6  ; workspace 6
# bindsym $mod+Shift+7 move container to workspace number $ws7  ; workspace 7
# bindsym $mod+Shift+8 move container to workspace number $ws8  ; workspace 8
# bindsym $mod+Shift+9 move container to workspace number $ws9  ; workspace 9
# bindsym $mod+Shift+0 move container to workspace number $ws10 ; workspace 10
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# move whole workspace to next monitor
bindsym $mod+Shift+n move workspace to output next

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# class                 border  backgr. text    indicator child_border
# client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff
# additional style settings
for_window [class=".*"] title_window_icon yes
for_window [all] title_window_icon padding 3px
# for_window [class="Gazebo"] move to output next
# for_window [window_type="dialog"] move position mouse
# focus_on_window_activation smart
# floating_minimum_size 500 x 350

# border stuff
# Make all zathura windows use border:
# for_window [class="(?i)zathura"] border pixel 2
# for_window [class="(?i)alacritty"] border pixel 2
# for_window [window_type="dialog"] move position mouse
# all applications have borders
# default_border pixel 1
for_window [all] border pixel 1
default_floating_border normal
hide_edge_borders smart
# do not focus pop ups
no_focus [window_role="pop-up"]
# smart pop up handling in fullscreen mode
popup_during_fullscreen smart

# default workspace layout
workspace_layout tabbed

# gaps inner 2
# gaps outer 2
# smart_gaps on

# print all window titles bold
# for_window [class=".*"] title_format "<b>%title</b>"

# By default, i3 does not display the window icon in the title bar.
# Starting with i3 v4.20, you can optionally enable window icons either for specific windows or for all windows (using the [for_window] directive).
# for_window [all] title_window_icon yes
# show the window icon for the focused window to make it stand out
# bindsym $mod+p title_window_icon on

# For instance: Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".
# workspace_auto_back_and_forth yes

# By default, when switching focus to a window on a different output (e.g. focusing a window on workspace 3 on output VGA-1, coming from workspace 2 on LVDS-1), the mouse cursor is warped to the center of that window.
# With the mouse_warping option, you can control when the mouse cursor should be warped. none disables warping entirely, whereas output is the default behavior described above.
mouse_warping output
# mouse_warping none

# resize window (you can also use the mouse for that)
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
mode "resize" {
    bindsym Left resize shrink width 1 px or 1 ppt
        bindsym Down resize grow height 1 px or 1 ppt
        bindsym Up resize shrink height 1 px or 1 ppt
        bindsym Right resize grow width 1 px or 1 ppt
# back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# redshift
set $redshift (i) enable | (u) disable
mode "$redshift" {
    bindsym i exec --no-startup-id redshift -P -O 4600
        bindsym u exec --no-startup-id redshift -x
# back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+comma mode "default"
}
bindsym $mod+comma mode "$redshift"

# lock command
# set $Locker ~/scripts/lockscreen.sh
set $Locker ~/scripts/lock.sh & sleep 30 && xset dpms force off
exec --no-startup-id ~/scripts/xidlehook-run.sh
bindsym $mod+Escape exec --no-startup-id $Locker

# the package sox contains the play tool
# bindsym $mod+Shift+Escape exec loginctl lock-session && play ~/.config/nvim/support/Engineer_Disband1.wav
bindsym $mod+Shift+Escape exec  play ~/.config/nvim/support/Engineer_Disband1.wav && $Locker

# polybar
# exec_always --no-startup-id ~/.config/polybar/launch.sh

# start dmenu (a program launcher)
bindsym $mod+D exec rofi -combi-modi window#drun#run -show combi -lines 20 -show-icons

# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# bindsym $mod+Shift+colon exec --no-startup-id rofi -show power-menu -modi power-menu:~/.config/rofi/rofi-power-menu

# rofi
set $rofi (w) WLAN
mode "$rofi" {
    bindsym w exec --no-startup-id p:~/.config/rofi/scripts/wifi/wifi
# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+D mode "$rofi"
bindsym $mod+Shift+colon exec --no-startup-id sh ~/scripts/check-dotfiles.sh && rofi -show p -modi p:~/.config/rofi/rofi-power-menu
# bindsym XF86PowerOff exec --no-startup-id sh ~/scripts/check-dotfiles.sh && rofi -show p -modi p:~/.config/rofi/rofi-power-menu
bindsym XF86PowerOff exec --no-startup-id sh ~/scripts/toggleLaptopKeyboard.sh
# set $mode_power [l]ogoff | [s]hutdown
# mode "$mode_power" {
#     bindsym l exec i3-msg exit
#     bindsym s exec systemctl poweroff
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym --release XF86PowerOff mode "$mode_power"
# bindsym --release XF86PowerOff --no-startup-id sh ~/scripts/toggleLaptopKeyboard.sh
# set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
# mode "$mode_system" {
#     bindsym l exec --no-startup-id loginctl lock-session, mode "default"
#         bindsym e exec --no-startup-id i3-msg exit, mode "default"
#         bindsym s exec --no-startup-id loginctl lock-session && systemctl suspend, mode "default"
#         bindsym h exec --no-startup-id loginctl lock-session && systemctl hibernate, mode "default"
#         bindsym r exec --no-startup-id systemctl reboot, mode "default"
#         bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
#
# # back to normal: Enter or Escape
#         bindsym Return mode "default"
#         bindsym Escape mode "default"
# }

# bindsym $mod+Shift+e mode "$mode_system"

# start a terminal
bindsym $mod+Return exec alacritty

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

bindsym $mod+n exec --no-startup-id ~/scripts/i3_empty_workspace.sh

# screen brightness control
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 1 && sh ~/scripts/notifyBrightness.sh
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 1 && sh ~/scripts/notifyBrightness.sh
# bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 1 && sh ~/scripts/notifyBrightness.sh
# bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 1 && sh ~/scripts/notifyBrightness.sh

# volume control
bindsym XF86AudioRaiseVolume exec --no-startup-id sh ~/scripts/changeVolume.sh up && sh ~/scripts/notifyVolume.sh
bindsym XF86AudioLowerVolume exec --no-startup-id sh ~/scripts/changeVolume.sh down && sh ~/scripts/notifyVolume.sh
bindsym XF86AudioMute exec --no-startup-id sh ~/scripts/changeVolume.sh mute && sh ~/scripts/notifyVolume.sh
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# change default sink
bindsym $mod+m exec pactl set-default-sink $(pactl list short sinks |awk '{print $2}' |rofi $rofi_args -dmenu)

# Spotify related key bindings
bindsym XF86AudioPlay exec --no-startup-id sh ~/scripts/playPauseToggle.sh
bindsym XF86AudioPrev exec --no-startup-id sh ~/scripts/playNextOrPrevious.sh prev
bindsym XF86AudioNext exec --no-startup-id sh ~/scripts/playNextOrPrevious.sh next

bindsym $mod+Shift+p exec --no-startup-id sh ~/scripts/playPauseToggle.sh
bindsym $mod+Shift+Prior exec --no-startup-id sh ~/scripts/playNextOrPrevious.sh prev
bindsym $mod+Shift+Next exec --no-startup-id sh ~/scripts/playNextOrPrevious.sh next

bindsym $mod+Shift+comma exec --no-startup-id ~/scripts/rofi-music

bindsym --release Caps_Lock exec --no-startup-id sh ~/scripts/notifyCaps.sh

# bindsym $mod+Shift+b exec cpupower-gui -b && notify-send "CPU" "CPU Governer set to Balanced"
# bindsym $mod+Shift+p exec cpupower-gui -p && notify-send "CPU" "CPU Governer set to Performance"

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always --no-startup-id nm-applet
exec_always --no-startup-id blueman-applet
exec_always --no-startup-id feh --bg-fill ~/wallpapers/wallpaper.png
exec_always --no-startup-id /usr/bin/lxpolkit
exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=ssh,secrets,pkcs11
exec_always --no-startup-id sh ~/scripts/check-dotfiles.sh

# exec_always --no-startup-id picom -b --experimental-backends --backend glx --vsync
# exec_always --no-startup-id picom

# vim:syntax=i3config
